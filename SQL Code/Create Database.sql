/*================================================
DROP TABLES
================================================*/

DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE PUBLISHER CASCADE CONSTRAINTS;
DROP TABLE PRIMARY_GENRE CASCADE CONSTRAINTS;
DROP TABLE AUTHOR CASCADE CONSTRAINTS;
DROP TABLE BOOK CASCADE CONSTRAINTS;
DROP TABLE STAFF CASCADE CONSTRAINTS;
DROP TABLE TECHNICAL_STAFF CASCADE CONSTRAINTS;
DROP TABLE SUPPORT_STAFF CASCADE CONSTRAINTS;
DROP TABLE LIBRARIAN CASCADE CONSTRAINTS;
DROP TABLE RENTAL CASCADE CONSTRAINTS;
DROP TABLE BOOK_FEE CASCADE CONSTRAINTS;
DROP TABLE RENTAL_DETAIL CASCADE CONSTRAINTS;
DROP TABLE RESERVATION CASCADE CONSTRAINTS;
DROP TABLE BOOK_AUTHOR CASCADE CONSTRAINTS;

/*================================================
DROP SEQUENCES
================================================*/

DROP SEQUENCE MEMBER_SEQ;
DROP SEQUENCE PUBLISHER_SEQ;
DROP SEQUENCE PRIMARY_GENRE_SEQ;
DROP SEQUENCE AUTHOR_SEQ;
DROP SEQUENCE BOOK_SEQ;
DROP SEQUENCE STAFF_SEQ;
DROP SEQUENCE TECHNICAL_STAFF_SEQ;
DROP SEQUENCE SUPPORT_STAFF_SEQ;
DROP SEQUENCE LIBRARIAN_SEQ;
DROP SEQUENCE RENTAL_SEQ;
DROP SEQUENCE BOOK_FEE_SEQ;

/*================================================
CREATE TABLES
================================================*/
CREATE TABLE MEMBER(
    MEM_ID INT PRIMARY KEY,
    MEM_FNAME VARCHAR2(100) NOT NULL,
    MEM_LNAME VARCHAR2(100) NOT NULL,
    MEM_IDNO VARCHAR2(13) NOT NULL CHECK (LENGTH(MEM_IDNO) = 13),
    MEM_PHONE VARCHAR2(15),
    MEM_STATUS VARCHAR2(10) NOT NULL CHECK (MEM_STATUS IN ('Active', 'Inactive'))
);

CREATE SEQUENCE MEMBER_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE;

CREATE TABLE PUBLISHER(
    PUBLISHER_ID INT PRIMARY KEY NOT NULL,
    PUBLISHER_NAME VARCHAR2(100) NOT NULL
);

CREATE SEQUENCE PUBLISHER_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE;

CREATE TABLE PRIMARY_GENRE(
    PRIMARY_GENRE_ID INT PRIMARY KEY,
    PRIMARY_GENRE_NAME VARCHAR2(100)
);

CREATE SEQUENCE PRIMARY_GENRE_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE;

CREATE TABLE AUTHOR(
    AUTH_ID INT PRIMARY KEY,
    AUTH_FNAME VARCHAR2(100) NOT NULL,
    AUTH_LNAME VARCHAR2(100) NOT NULL,
    AUTH_INIT CHAR(12) NOT NULL,
    AUTH_DOB DATE
);

CREATE SEQUENCE AUTHOR_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE;

CREATE TABLE BOOK(
    BOOK_ID INT PRIMARY KEY,
    BOOK_TITLE VARCHAR2(100) NOT NULL,
    BOOK_ISBN VARCHAR2(13) NOT NULL CHECK (LENGTH(BOOK_ISBN) = 13),
    PUBLISHER_ID INT,
    BOOK_RELDATE DATE,
    PRIMARY_GENRE_ID INT,
    BOOK_DESCRIPT VARCHAR2(2000),
    IN_CIRCULATION CHAR(1 BYTE) CHECK (IN_CIRCULATION IN ('Y', 'N')),
    FOREIGN KEY (PUBLISHER_ID) REFERENCES PUBLISHER(PUBLISHER_ID),
    FOREIGN KEY (PRIMARY_GENRE_ID) REFERENCES PRIMARY_GENRE(PRIMARY_GENRE_ID)
);

CREATE SEQUENCE BOOK_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE;

CREATE TABLE STAFF(
    STAFF_ID INT PRIMARY KEY,
    STAFF_FNAME VARCHAR2(100) NOT NULL,
    STAFF_LNAME VARCHAR2(100) NOT NULL,
    STAFF_IDNO VARCHAR2(13) NOT NULL CHECK (LENGTH(STAFF_IDNO) = 13),
    STAFF_PHONE VARCHAR2(15),
    STAFF_TYPE CHAR(1 BYTE) NOT NULL CHECK (STAFF_TYPE IN ('L', 'T', 'S'))
);

CREATE SEQUENCE STAFF_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE;

CREATE TABLE TECHNICAL_STAFF(
    STAFF_ID INT PRIMARY KEY,
    SALARY FLOAT NOT NULL CHECK (SALARY > 0),
    DATA_ALLOWANCE FLOAT NOT NULL CHECK (DATA_ALLOWANCE > 0),
    FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID)
);

CREATE SEQUENCE TECHNICAL_STAFF_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE;

CREATE TABLE SUPPORT_STAFF(
    STAFF_ID INT PRIMARY KEY,
    PAY_PER_HR FLOAT NOT NULL CHECK (PAY_PER_HR > 0),
    HRS_WORKED FLOAT NOT NULL CHECK (HRS_WORKED > 0),
    FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID)
);

CREATE SEQUENCE SUPPORT_STAFF_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE;

CREATE TABLE LIBRARIAN(
    STAFF_ID INT PRIMARY KEY,
    LIB_USERNAME VARCHAR2(100) NOT NULL,
    LIB_PASSWORD VARCHAR2(100) NOT NULL,
    WEEKLY_WAGE FLOAT NOT NULL CHECK (WEEKLY_WAGE > 0),
    IS_ADMIN CHAR(1) NOT NULL CHECK (IS_ADMIN IN ('Y', 'N')),
    FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID)
);

CREATE SEQUENCE LIBRARIAN_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE;

CREATE TABLE RENTAL(
    RENTAL_ID INT PRIMARY KEY,
    MEM_ID INT NOT NULL,
    RENTAL_DATE DATE NOT NULL,
    LIB_ID INT NOT NULL,
    FOREIGN KEY (MEM_ID) REFERENCES MEMBER(MEM_ID),
    FOREIGN KEY (LIB_ID) REFERENCES LIBRARIAN(STAFF_ID)
);

CREATE SEQUENCE RENTAL_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE;

CREATE TABLE BOOK_FEE(
    FEE_NUM INT PRIMARY KEY,
    RENTAL_ID INT NOT NULL,
    BOOK_ID INT NOT NULL,
    FEE_AMOUNT FLOAT NOT NULL CHECK (FEE_AMOUNT > 0),
    FEE_PAID CHAR(1) NOT NULL CHECK (FEE_PAID IN ('Y', 'N')),
    FOREIGN KEY (RENTAL_ID) REFERENCES RENTAL(RENTAL_ID),
    FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID)
);

CREATE SEQUENCE BOOK_FEE_SEQ
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE
    NOCYCLE;

CREATE TABLE RENTAL_DETAIL(
    RENTAL_ID INT,
    BOOK_ID INT,
    RENTAL_RETURN_DATE DATE NOT NULL,
    RENTAL_RETURNED CHAR(1) NOT NULL CHECK (RENTAL_RETURNED IN ('Y', 'N')),
    PRIMARY KEY (RENTAL_ID, BOOK_ID),
    FOREIGN KEY (RENTAL_ID) REFERENCES RENTAL(RENTAL_ID),
    FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID)
);

CREATE TABLE RESERVATION(
    MEM_ID INT,
    BOOK_ID INT,
    RESERVATION_DATE DATE,
    LIB_ID INT,
    PRIMARY KEY (MEM_ID, BOOK_ID, RESERVATION_DATE),
    FOREIGN KEY (MEM_ID) REFERENCES MEMBER(MEM_ID),
    FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID),
    FOREIGN KEY (LIB_ID) REFERENCES LIBRARIAN(STAFF_ID)
);

CREATE TABLE BOOK_AUTHOR(
    BOOK_ID INT NOT NULL,
    AUTH_ID INT NOT NULL,
    PRIMARY KEY (BOOK_ID, AUTH_ID),
    FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID),
    FOREIGN KEY (AUTH_ID) REFERENCES AUTHOR(AUTH_ID)
);

/*=================================================
create indexes
=================================================*/

CREATE INDEX IDX_AUTHOR_NAME ON AUTHOR(AUTH_FNAME, AUTH_LNAME);
CREATE INDEX IDX_BOOK_NAME_AUTHOR ON BOOK(BOOK_TITLE, PUBLISHER_ID);
CREATE INDEX IDX_MEMBER_NAME ON MEMBER(MEM_FNAME, MEM_LNAME);

/*=================================================
insert data into MEMBER
=================================================*/

INSERT INTO MEMBER
VALUES (MEMBER_SEQ.NEXTVAL, 'John', 'Doe', '1234567890123', '555-1234', 'Active');

INSERT INTO MEMBER
VALUES (MEMBER_SEQ.NEXTVAL, 'Jane', 'Smith', '0987654321012', '555-5678', 'Inactive');

INSERT INTO MEMBER
VALUES (MEMBER_SEQ.NEXTVAL, 'Michael', 'Johnson', '5432167890135', '555-2468', 'Active');

INSERT INTO MEMBER
VALUES (MEMBER_SEQ.NEXTVAL, 'Sarah', 'Williams', '6789054321846', '555-7890', 'Active');

INSERT INTO MEMBER
VALUES (MEMBER_SEQ.NEXTVAL, 'David', 'Brown', '6789054321642', '555-1357', 'Inactive');

/*=================================================
insert data into PUBLISHER
=================================================*/

INSERT INTO PUBLISHER
VALUES (PUBLISHER_SEQ.NEXTVAL, 'Penguin Books');

INSERT INTO PUBLISHER
VALUES (PUBLISHER_SEQ.NEXTVAL, 'HarperCollins');

INSERT INTO PUBLISHER
VALUES (PUBLISHER_SEQ.NEXTVAL, 'Random House');

INSERT INTO PUBLISHER
VALUES (PUBLISHER_SEQ.NEXTVAL, 'Simon and Schuster');

INSERT INTO PUBLISHER
VALUES (PUBLISHER_SEQ.NEXTVAL, 'Macmillan Publishers');

/*=================================================
insert data into PRIMARY_GENRE
=================================================*/

INSERT INTO PRIMARY_GENRE
VALUES (PRIMARY_GENRE_SEQ.NEXTVAL, 'Fiction');

INSERT INTO PRIMARY_GENRE
VALUES (PRIMARY_GENRE_SEQ.NEXTVAL, 'Mystery');

INSERT INTO PRIMARY_GENRE
VALUES (PRIMARY_GENRE_SEQ.NEXTVAL, 'Romance');

INSERT INTO PRIMARY_GENRE
VALUES (PRIMARY_GENRE_SEQ.NEXTVAL, 'Science Fiction');

INSERT INTO PRIMARY_GENRE
VALUES (PRIMARY_GENRE_SEQ.NEXTVAL, 'Biography');

INSERT INTO PRIMARY_GENRE
VALUES (PRIMARY_GENRE_SEQ.NEXTVAL, 'Fantasy');

/*=================================================
insert data into BOOK
=================================================*/

INSERT INTO BOOK
VALUES (BOOK_SEQ.NEXTVAL, 'The Great Gatsby', '9780743273565', 1, TO_DATE('2022-01-15', 'YYYY-MM-DD'), 1, 'A classic novel by F. Scott Fitzgerald.', 'Y');

INSERT INTO BOOK
VALUES (BOOK_SEQ.NEXTVAL, 'Harry Potter and the Sorcerer''s Stone', '9780590353427', 2, TO_DATE('2001-10-01', 'YYYY-MM-DD'), 1, 'The first book in the Harry Potter series.', 'Y');

INSERT INTO BOOK
VALUES (BOOK_SEQ.NEXTVAL, 'Pride and Prejudice', '9780141439518', 3, TO_DATE('1813-01-28', 'YYYY-MM-DD'), 3, 'A classic romance novel by Jane Austen.', 'Y');

INSERT INTO BOOK
VALUES (BOOK_SEQ.NEXTVAL, 'Dune', '9780441172719', 4, TO_DATE('1965-06-01', 'YYYY-MM-DD'), 4, 'A science fiction novel by Frank Herbert.', 'Y');

INSERT INTO BOOK
VALUES (BOOK_SEQ.NEXTVAL, 'Steve Jobs', '9781451648539', 5, TO_DATE('2011-10-24', 'YYYY-MM-DD'), 5, 'A biography of Steve Jobs by Walter Isaacson.', 'Y');

INSERT INTO BOOK
VALUES (BOOK_SEQ.NEXTVAL, 'The Eye of the World', '0312850093513', 2, TO_DATE('1990-01-15', 'YYYY-MM-DD'), 6, 'The first novel in a fantasy series by Robert Jordan.', 'Y');

INSERT INTO BOOK
VALUES (BOOK_SEQ.NEXTVAL, 'Bloodstone', '1534856212579', 4, TO_DATE('1997-10-29', 'YYYY-MM-DD'), 6, 'The closing novel in a fantasy series by David Gemmell.', 'Y');

INSERT INTO BOOK
VALUES (BOOK_SEQ.NEXTVAL, 'Destination: Void', '8456321856375', 5, TO_DATE('1966-06-15', 'YYYY-MM-DD'), 4, 'A science fiction novel by Frank Herbert.', 'Y');

INSERT INTO BOOK
VALUES (BOOK_SEQ.NEXTVAL, 'Legend', '6485123578426', 3, TO_DATE('1984-03-27', 'YYYY-MM-DD'), 6, 'A fantasy novel by David Gemmell.', 'N');

INSERT INTO BOOK
VALUES (BOOK_SEQ.NEXTVAL, 'The Great Hunt', '7512964822652', 1, TO_DATE('1990-11-15', 'YYYY-MM-DD'), 6, 'The second novel in a fantasy series by Robert Jordan.', 'N');

/*=================================================
insert data into AUTHOR 
=================================================*/

INSERT INTO AUTHOR
VALUES (AUTHOR_SEQ.NEXTVAL, 'J.K.', 'Rowling', 'J', TO_DATE('1965-07-31', 'YYYY-MM-DD'));

INSERT INTO AUTHOR
VALUES (AUTHOR_SEQ.NEXTVAL, 'Jane', 'Austen', 'J', TO_DATE('1775-12-16', 'YYYY-MM-DD'));

INSERT INTO AUTHOR
VALUES (AUTHOR_SEQ.NEXTVAL, 'Frank', 'Herbert', 'F', TO_DATE('1920-10-08', 'YYYY-MM-DD'));

INSERT INTO AUTHOR
VALUES (AUTHOR_SEQ.NEXTVAL, 'Walter', 'Isaacson', 'W', TO_DATE('1952-05-20', 'YYYY-MM-DD'));

INSERT INTO AUTHOR
VALUES (AUTHOR_SEQ.NEXTVAL, 'F. Scott', 'Fitzgerald', 'F', TO_DATE('1896-09-24', 'YYYY-MM-DD'));

INSERT INTO AUTHOR
VALUES (AUTHOR_SEQ.NEXTVAL, 'David', 'Gemmell', 'D', TO_DATE('1948-08-01', 'YYYY-MM-DD'));

INSERT INTO AUTHOR
VALUES (AUTHOR_SEQ.NEXTVAL, 'Robert', 'Jordan', 'R', TO_DATE('1948-10-17', 'YYYY-MM-DD'));

/*=================================================
insert data into BOOK_AUTHOR
=================================================*/

INSERT INTO BOOK_AUTHOR
VALUES (1, 5);

INSERT INTO BOOK_AUTHOR
VALUES (2, 1);

INSERT INTO BOOK_AUTHOR
VALUES (3, 2);

INSERT INTO BOOK_AUTHOR
VALUES (4, 3);

INSERT INTO BOOK_AUTHOR
VALUES (5, 4);

INSERT INTO BOOK_AUTHOR
VALUES (6, 7);

INSERT INTO BOOK_AUTHOR
VALUES (7, 6);

INSERT INTO BOOK_AUTHOR
VALUES (8, 3);

INSERT INTO BOOK_AUTHOR
VALUES (9, 6);

INSERT INTO BOOK_AUTHOR
VALUES (10, 7);

/*=================================================
insert data into STAFF, TECHNICAL_STAFF, SUPPORT_STAFF and LIBRARIAN
=================================================*/

INSERT INTO STAFF
VALUES (STAFF_SEQ.NEXTVAL, 'John', 'Doe', '1234567890156', '123-456-7890', 'T');
INSERT INTO TECHNICAL_STAFF
VALUES (STAFF_SEQ.CURRVAL, 5000.00, 10.0);

INSERT INTO STAFF
VALUES (STAFF_SEQ.NEXTVAL, 'Jane', 'Smith', '9876543210453', '987-654-3210', 'T');
INSERT INTO TECHNICAL_STAFF
VALUES (STAFF_SEQ.CURRVAL, 4500.00, 8.0);

INSERT INTO STAFF
VALUES (STAFF_SEQ.NEXTVAL, 'David', 'Johnson', '5555555555555', '555-555-5555', 'S');
INSERT INTO SUPPORT_STAFF
VALUES (STAFF_SEQ.CURRVAL, 20.50, 40.0);

INSERT INTO STAFF
VALUES (STAFF_SEQ.NEXTVAL, 'Sarah', 'Williams', '7777777777777', '777-777-7777', 'S');
INSERT INTO SUPPORT_STAFF
VALUES (STAFF_SEQ.CURRVAL, 19.45, 51.80);

INSERT INTO STAFF
VALUES (STAFF_SEQ.NEXTVAL, 'Robert', 'Brown', '8888888888888', '888-888-8888', 'L');
INSERT INTO LIBRARIAN
VALUES (STAFF_SEQ.CURRVAL, 'librarian1', 'password123', 1000.00, 'Y');

INSERT INTO STAFF
VALUES (STAFF_SEQ.NEXTVAL, 'Emily', 'Jones', '9999999999999', '999-999-9999', 'L');
INSERT INTO LIBRARIAN
VALUES (STAFF_SEQ.CURRVAL, 'librarian2', 'password456', 950.00, 'N');

/*=================================================
insert data into RENTAL
=================================================*/

INSERT INTO RENTAL
VALUES (RENTAL_SEQ.NEXTVAL, 1, TO_DATE('2023-05-20', 'YYYY-MM-DD'), 6);

INSERT INTO RENTAL
VALUES (RENTAL_SEQ.NEXTVAL, 2, TO_DATE('2023-05-21', 'YYYY-MM-DD'), 5);

INSERT INTO RENTAL
VALUES (RENTAL_SEQ.NEXTVAL, 3, TO_DATE('2023-05-22', 'YYYY-MM-DD'), 6);

INSERT INTO RENTAL
VALUES (RENTAL_SEQ.NEXTVAL, 4, TO_DATE('2023-05-23', 'YYYY-MM-DD'), 5);

INSERT INTO RENTAL
VALUES (RENTAL_SEQ.NEXTVAL, 5, TO_DATE('2023-05-24', 'YYYY-MM-DD'), 6);

INSERT INTO RENTAL
VALUES (RENTAL_SEQ.NEXTVAL, 4, TO_DATE('2023-05-19', 'YYYY-MM-DD'), 5);

INSERT INTO RENTAL
VALUES (RENTAL_SEQ.NEXTVAL, 3, TO_DATE('2023-05-20', 'YYYY-MM-DD'), 6);

INSERT INTO RENTAL
VALUES (RENTAL_SEQ.NEXTVAL, 4, TO_DATE('2023-05-18', 'YYYY-MM-DD'), 6);

INSERT INTO RENTAL
VALUES (RENTAL_SEQ.NEXTVAL, 5, TO_DATE('2023-05-21', 'YYYY-MM-DD'), 5);

INSERT INTO RENTAL
VALUES (RENTAL_SEQ.NEXTVAL, 1, TO_DATE('2023-05-17', 'YYYY-MM-DD'), 5);

INSERT INTO RENTAL
VALUES (RENTAL_SEQ.NEXTVAL, 2, TO_DATE('2023-05-22', 'YYYY-MM-DD'), 6);

INSERT INTO RENTAL
VALUES (RENTAL_SEQ.NEXTVAL, 3, TO_DATE('2023-05-16', 'YYYY-MM-DD'), 6);

/*=================================================
insert data into RENTAL_DETAIL
=================================================*/

INSERT INTO RENTAL_DETAIL
VALUES (2, 1, SYSDATE, 'Y');

INSERT INTO RENTAL_DETAIL
VALUES (2, 2, SYSDATE, 'Y');

INSERT INTO RENTAL_DETAIL
VALUES (3, 3, SYSDATE, 'Y');

INSERT INTO RENTAL_DETAIL
VALUES (3,4, SYSDATE, 'Y');

INSERT INTO RENTAL_DETAIL
VALUES (4,5, SYSDATE, 'Y');

INSERT INTO RENTAL_DETAIL
VALUES (1,6, SYSDATE, 'N');

INSERT INTO RENTAL_DETAIL
VALUES (5,2, SYSDATE, 'N');

INSERT INTO RENTAL_DETAIL
VALUES (6,7, SYSDATE, 'Y');

INSERT INTO RENTAL_DETAIL
VALUES (7,3, SYSDATE, 'Y');

INSERT INTO RENTAL_DETAIL
VALUES (8,2, SYSDATE, 'Y');

INSERT INTO RENTAL_DETAIL
VALUES (9,8, SYSDATE, 'N');

INSERT INTO RENTAL_DETAIL
VALUES (10,4, SYSDATE, 'Y');

/*=================================================
insert data into BOOK_FEE
=================================================*/

INSERT INTO BOOK_FEE 
VALUES (BOOK_FEE_SEQ.nextval, 2, 1, 10.99, 'Y');

INSERT INTO BOOK_FEE 
VALUES (BOOK_FEE_SEQ.nextval, 3, 3, 5.99, 'N');

/*=================================================
insert data into RESERVATION
=================================================*/

INSERT INTO RESERVATION
VALUES (1, 1, TO_DATE('2023-05-23', 'YYYY-MM-DD'), 5);

INSERT INTO RESERVATION 
VALUES (2, 3, TO_DATE('2023-05-23', 'YYYY-MM-DD'), 5);

INSERT INTO RESERVATION 
VALUES (3, 2, TO_DATE('2023-05-24', 'YYYY-MM-DD'), 5);

INSERT INTO RESERVATION 
VALUES (4, 5, TO_DATE('2023-05-24', 'YYYY-MM-DD'), 6);

INSERT INTO RESERVATION 
VALUES (5, 4, TO_DATE('2023-05-25', 'YYYY-MM-DD'), 6);

/*=================================================
create VIEWS
=================================================*/

CREATE OR REPLACE VIEW BOOK_DETAILS AS
SELECT B.BOOK_ID, B.BOOK_TITLE, A.AUTH_FNAME || ' ' || A.AUTH_LNAME AS AUTHOR, P.PUBLISHER_NAME, G.PRIMARY_GENRE_NAME
FROM BOOK B
JOIN BOOK_AUTHOR BA ON B.BOOK_ID = BA.BOOK_ID
JOIN AUTHOR A ON BA.AUTH_ID = A.AUTH_ID
JOIN PUBLISHER P ON B.PUBLISHER_ID = P.PUBLISHER_ID
JOIN PRIMARY_GENRE G ON B.PRIMARY_GENRE_ID = G.PRIMARY_GENRE_ID;


CREATE OR REPLACE VIEW CURRENT_RENTALS AS
SELECT R.RENTAL_ID, M.MEM_FNAME || ' ' || M.MEM_LNAME AS MEMBER, B.BOOK_TITLE, RD.RENTAL_RETURN_DATE
FROM RENTAL R
JOIN MEMBER M ON R.MEM_ID = M.MEM_ID
JOIN RENTAL_DETAIL RD ON R.RENTAL_ID = RD.RENTAL_ID
JOIN BOOK B ON RD.BOOK_ID = B.BOOK_ID
WHERE RD.RENTAL_RETURNED = 'N';


CREATE OR REPLACE VIEW STAFF_INFORMATION AS
SELECT S.STAFF_ID, S.STAFF_FNAME || ' ' || S.STAFF_LNAME AS STAFF_NAME, S.STAFF_TYPE,
       L.LIB_USERNAME, L.LIB_PASSWORD, L.IS_ADMIN, TS.SALARY, SS.PAY_PER_HR
FROM STAFF S
LEFT JOIN LIBRARIAN L 
    ON S.STAFF_ID = L.STAFF_ID
LEFT JOIN TECHNICAL_STAFF TS 
    ON S.STAFF_ID = TS.STAFF_ID
LEFT JOIN SUPPORT_STAFF SS 
    ON S.STAFF_ID = SS.STAFF_ID;
    
    
CREATE OR REPLACE VIEW MEMBER_INFORMATION AS
SELECT M.MEM_FNAME || ' ' || M.MEM_LNAME AS MEMBER_NAME, M.MEM_PHONE, M.MEM_STATUS,
       SUM(CASE WHEN RD.RENTAL_RETURNED = 'N' THEN 1 ELSE 0 END) AS "Books Borrowed",
       SUM(BF.FEE_AMOUNT) AS "Total Amount Owed"
FROM MEMBER M
LEFT JOIN RENTAL R
    ON M.MEM_ID = R.MEM_ID
LEFT JOIN RENTAL_DETAIL RD
    ON RD.RENTAL_ID = R.RENTAL_ID
LEFT JOIN BOOK_FEE BF
    ON RD.RENTAL_ID = BF.RENTAL_ID
GROUP BY M.MEM_FNAME, M.MEM_LNAME, M.MEM_PHONE, M.MEM_STATUS;
